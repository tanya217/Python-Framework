#lex
import ply.lex as lex
from plygenCreator import action
tokens=('NUMBER','ID','DEF','TAB','RETURN','IF','ELIF','ELSE','PRINT','FOR','IN','RANGE','GREATERTHAN','MINUS','SPACE','COMMENT','AND','OR','NOT')
literals=['+','(',')',':',',','<','/','*','=','!','\'','"','%']

lineCount=0

def t_newline(t):
	r'\n+'
	global lineCount
	lineCount=lineCount+1

def t_NUMBER(t):
	r'\d+'
	t.value = int(t.value)
	return t
def t_IF(t):
	r'if'
	return t
def t_FOR(t):
	r'for'
	return t
def t_DEF(t):
	r'def'
	return t
def t_TAB(t):
	r'\t'
	return t
def t_SPACE(t):
	r'\s'
	return t

def t_RETURN(t):
	r'return'
	return t
def t_ELIF(t):
	r'elif'
	return t
def t_PRINT(t):
	r'print'
	return t
def t_IN(t):
	r'in'
	return t
def t_RANGE(t):
	r'range'
	return t
def t_AND(t):
	r'and'
	return t
def t_OR(t):
	r'or'
	return t
def t_NOT(t):
	r'not'
	return t
def t_GREATERTHAN(t):
	r'>'
	return t
def t_MINUS(t):
	r'-'
	return t


def t_ID(t):
	r'[a-zA-Z_0-9][a-zA-Z_0-9]*'
	return t

def t_COMMENT(t):
	r'\'\'\'[if|while|do|for|print|elif|def|for|in|(|)|-|[a-zA-Z0-9]+]*\'\'\''
	return t


'''def p_empty(p):
	'empty :'
	pass'''

def t_error(t):
    print("Illegal character '%s'" % t.value[0])
    t.lexer.skip(1)

lexer=lex.lex()
lexer.input("def computeGCD(x, y):\
	if x > y:\
		small = y\
	else:\
		small = x\
	for i in range(1, small+1):\
		if((x % i == 0) and (y % i == 0)):\
			gcd = i\
	return gcd\
a = 60\
b= 48\
print (computeGCD(60,48))")

#Tokenize
'''while True:
	tok = lexer.token()
	if not tok:
		break      # No more input
	print(tok.type)'''
